{"version":3,"file":"static/js/main-e50d3555.js","mappings":"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","sources":["../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/engine.io-client/build/esm/globals.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/polling-xhr.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/transports/webtransport.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","_ref","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","chars","lookup","i","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","length","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","createPacketEncoderStream","TransformStream","transform","packet","controller","arrayBuffer","then","encoded","TextEncoder","encode","encodePacketToBinary","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","nextTick","Promise","resolve","cb","setTimeoutFn","globalThisShim","self","window","Function","pick","_len","arguments","attr","Array","_key","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","bind","clearTimeoutFn","randomString","Date","now","Math","random","TransportError","Error","constructor","reason","description","context","super","this","Transport","Emitter","writable","query","socket","forceBase64","onError","emitReserved","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","undefined","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","str","encodeURIComponent","Polling","_polling","name","_poll","total","once","doPoll","decodePayload","encodedPayload","encodedPackets","decodedPacket","push","encodePayload","count","join","doWrite","uri","timestampRequests","timestampParam","sid","b64","value","XMLHttpRequest","err","hasCORS","empty","BaseXHR","location","isSSL","protocol","xd","fn","req","request","method","on","xhrStatus","pollXhr","Request","createRequest","_opts","_method","_uri","_data","_create","_a","xdomain","xhr","_xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","e","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","getResponseHeader","status","_onLoad","_onError","document","_index","requestsCount","requests","_cleanup","fromError","abort","responseText","attachEvent","unloadHandler","addEventListener","hasXHR2","newRequest","responseType","concat","isReactNative","navigator","product","toLowerCase","BaseWS","protocols","headers","ws","createSocket","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","WebSocketCtor","WebSocket","MozWebSocket","transports","websocket","_packet","webtransport","_transport","WebTransport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","_writer","getWriter","read","done","polling","assign","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","splice","queryKey","$0","$1","$2","withEventListeners","removeEventListener","OFFLINE_EVENT_LISTENERS","listener","SocketWithoutUpgrade","writeBuffer","_prevBufferLen","_pingInterval","_pingTimeout","_maxPayload","_pingTimeoutTime","Infinity","parsedUri","_transportsByName","t","transportName","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","_beforeunloadEventListener","transport","removeAllListeners","_offlineEventListener","_onClose","_cookieJar","createCookieJar","_open","createTransport","EIO","id","priorWebsocketSuccess","setTransport","_onDrain","_onPacket","flush","onHandshake","JSON","_sendPacket","_resetPingTimeout","code","pingInterval","pingTimeout","_pingTimeoutTimer","delay","upgrading","_getWritablePackets","payloadSize","c","utf8Length","ceil","_hasPingExpired","hasExpired","msg","options","compress","cleanupAndClose","off","waitForUpgrade","tryAllTransports","SocketWithUpgrade","_upgrades","_probe","failed","onTransportOpen","cleanup","freezeTransport","error","onTransportClose","onupgrade","to","removeListener","_filterUpgrades","upgrades","filteredUpgrades","Socket","o","map","DEFAULT_TRANSPORTS","filter"],"sourceRoot":""}