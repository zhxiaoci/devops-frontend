{"version":3,"file":"static/js/main-dcb821d8.371d9170.js","mappings":"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","sources":["../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/contrib/backo2.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js","contexts/WsContext.tsx","contexts/UserContext.tsx","components/Layout/AppHeader.tsx","components/Layout/Sidebar.tsx","App.tsx","reportWebVitals.ts","qiankun.ts","index.tsx","services/auth.ts","services/axios.ts","../node_modules/toggle-selection/index.js","../node_modules/@socket.io/component-emitter/lib/esm/index.js"],"sourcesContent":["const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","import React, { createContext, useContext, useState, useEffect, useRef } from 'react';\nimport { WebSocketMessage } from '../types/websocket';\nimport { useSearchParams } from 'react-router-dom';\nimport { io, Socket } from 'socket.io-client';\nimport { message } from 'antd';\n\ninterface ContextType {\n    changeMsg: any;\n    deployMsg: any\n}\n\nconst WsContext = createContext<ContextType | undefined>(undefined);\n\nexport const WsProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n    const [searchParams] = useSearchParams();\n    const repoId = searchParams.get('id');\n    const [changeMsg, setChangeMsg] = useState<any>({})\n    const [deployMsg, setDeployMsg] = useState<any>({})\n    const socket = useRef<Socket | null>(null);\n\n    useEffect(() => {\n        if (!repoId) return;\n    \n        const token = localStorage.getItem('github_token');\n        socket.current = io(process.env.REACT_APP_WS_URL || 'ws://localhost:3000', {\n          auth: {\n            token: `Bearer ${token}`,\n          },\n        });\n    \n        socket.current.on('connect', () => {\n          console.log('WebSocket connected');\n          socket.current?.emit('subscribe_repo', repoId);\n        });\n    \n        socket.current.on('connect_error', (error: any) => {\n          console.error('Connection error:', error);\n          message.error('WebSocket connection failed');\n        });\n    \n        socket.current.on('error', (error: any) => {\n          console.error('WebSocket error:', error);\n          message.error(error.data.message);\n        });\n    \n        socket.current.on('workflow_job', (data: any) => {\n          console.log(data)\n        });\n    \n        socket.current.on('deployment', (data: any) => {\n            console.log(data)\n          setDeployMsg(data)\n        });\n    \n        // socket.current.on('pr', (data: any) => {\n        //   setLastMessage({ type: 'pr', data });\n        // });\n    \n        socket.current.on('change', (data: any) => {\n            setChangeMsg(data)\n        });\n     \n        return () => {\n          if (socket.current) {\n            socket.current.emit('unsubscribe_repo', repoId);\n            socket.current.disconnect();\n          }\n        };\n      }, [repoId]);\n\n      const value = {\n        changeMsg, \n        deployMsg\n      }\n\n    return <WsContext.Provider value={value}>{children}</WsContext.Provider>;\n};\n\nexport const useWebSocket = () => {\n  const context = useContext(WsContext);\n  if (context === undefined) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n}; ","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { User } from '../types/user';\nimport { authService } from '../services/auth';\n\ninterface UserContextType {\n  user: User | null;\n  loading: boolean;\n  error: Error | null;\n  login: () => void;\n  logout: () => void;\n}\n\nconst UserContext = createContext<UserContextType | undefined>(undefined);\n\nexport const UserProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<Error | null>(null);\n\n  useEffect(() => {\n    const token = localStorage.getItem('github_token');\n    if (token) {\n      authService.getCurrentUser()\n        .then(setUser)\n        .catch(setError)\n        .finally(() => setLoading(false));\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const value = {\n    user,\n    loading,\n    error,\n    login: authService.login,\n    logout: authService.logout,\n  };\n\n  return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\n};\n\nexport const useUser = () => {\n  const context = useContext(UserContext);\n  if (context === undefined) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n}; ","import React from 'react';\nimport { Layout, Button, Space, Avatar, Typography, Dropdown } from 'antd';\nimport { UserOutlined, LogoutOutlined } from '@ant-design/icons';\nimport { useUser } from '../../contexts/UserContext';\n\nconst { Header } = Layout;\nconst { Text } = Typography;\n\nconst AppHeader: React.FC = () => {\n  const { user, loading, login, logout } = useUser();\n\n  const userMenu = [\n    {\n      key: 'logout',\n      icon: <LogoutOutlined />,\n      label: 'Logout',\n      onClick: logout,\n    },\n  ];\n\n  return (\n    <Header style={{ background: '#fff', padding: '0 24px', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n      <div className=\"logo\">\n        <Text strong style={{ fontSize: '18px' }}>GitHub DevOps</Text>\n      </div>\n      <div>\n        {loading ? (\n          <Button loading>Loading...</Button>\n        ) : user ? (\n          <Dropdown menu={{ items: userMenu }} placement=\"bottomRight\">\n            <Space style={{ cursor: 'pointer' }}>\n              <Avatar src={user?.avatar_url} />\n              <Text>{user.name || user.login}</Text>\n            </Space>\n          </Dropdown>\n        ) : (\n          <Button type=\"primary\" icon={<UserOutlined />} onClick={login}>\n            Login with GitHub\n          </Button>\n        )}\n      </div>\n    </Header>\n  );\n};\n\nexport default AppHeader; ","import React from 'react';\nimport { Layout, Menu } from 'antd';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport {\n  FolderOutlined,\n  ProjectOutlined,\n  BranchesOutlined,\n  IssuesCloseOutlined,\n  TeamOutlined,\n} from '@ant-design/icons';\n\nconst { Sider } = Layout;\n\nconst Sidebar: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const menuItems = [\n    {\n      key: 'repositories',\n      label: '仓库',\n      icon: <FolderOutlined />,\n      children: [\n        {\n          key: '/',\n          label: '项目仓库',\n          icon: <ProjectOutlined />,\n        },\n      ],\n    },\n    {\n      key: 'workItems',\n      label: '工作项',\n      icon: <IssuesCloseOutlined />,\n      children: [\n        {\n          key: '/work-items/list',\n          label: '工作项列表',\n        },\n        {\n          key: '/work-items/board',\n          label: '看板视图',\n        },\n      ],\n    },\n    {\n      key: 'team',\n      label: '团队',\n      icon: <TeamOutlined />,\n      children: [\n        {\n          key: '/team/members',\n          label: '成员管理',\n        },\n      ],\n    },\n  ];\n\n  return (\n    <Sider\n      width={200}\n      style={{\n        background: '#fff',\n        borderRight: '1px solid #f0f0f0',\n      }}\n    >\n      <Menu\n        mode=\"inline\"\n        selectedKeys={[location.pathname]}\n        defaultOpenKeys={['repositories', 'workItems', 'team']}\n        style={{ height: '100%', borderRight: 0 }}\n        items={menuItems}\n        onClick={({ key }) => navigate(key)}\n      />\n    </Sider>\n  );\n};\n\nexport default Sidebar; ","import React, { lazy, Suspense } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { Layout, ConfigProvider, theme, Spin } from 'antd';\nimport { UserProvider } from './contexts/UserContext';\nimport { WsProvider } from './contexts/WsContext'\nimport AppHeader from './components/Layout/AppHeader';\nimport Sidebar from './components/Layout/Sidebar';\n\n\n// import RequirementsList from './components/Requirements/RequirementsList';\n// import RequirementsBoard from './components/Requirements/RequirementsBoard';\n// import TeamRoles from './components/Team/TeamRoles';\n// import BranchesView from './components/Repository/BranchesView';\n// import Dashboard from './components/Dashboard/Dashboard';\n// import AuthCallback from './components/Auth/AuthCallback';\n// import TeamMembers from './components/Team/TeamMembers';\n// import RepositoryDetail from './components/Repository/RepositoryDetail';\n// import WorkItemsList from './components/WorkItems/WorkItemsList';\n// import WorkItemsBoard from './components/WorkItems/WorkItemsBoard';\n\nconst Home = lazy(() => import('./components/Dashboard/Dashboard')); \nconst AuthCallback = lazy(() => import('./components/Auth/AuthCallback')); \nconst RepositoryDetail = lazy(() => import('./components/Repository/RepositoryDetail')); \nconst WorkItemsList = lazy(() => import('./components/WorkItems/WorkItemsList')); \nconst WorkItemsBoard = lazy(() => import('./components/WorkItems/WorkItemsBoard')); \nconst TeamMembers = lazy(() => import('./components/Team/TeamMembers')); \n\nconst { Content } = Layout;\nconst queryClient = new QueryClient();\n\nfunction App() {\n  return (\n    <ConfigProvider\n      theme={{\n        algorithm: theme.defaultAlgorithm,\n        token: {\n          colorPrimary: '#1890ff',\n          borderRadius: 8,\n          boxShadow: '0 2px 8px rgba(0, 0, 0, 0.06)',\n        },\n      }}\n    >\n      <QueryClientProvider client={queryClient}>\n        <UserProvider>\n          <Router>\n            <Layout className=\"app-layout\">\n              <AppHeader />\n              <Layout>\n                <Sidebar />\n                <Content className=\"app-content\">\n                  <Suspense>   \n                    <Routes>\n                      <Route path=\"/\" element={<Home />} />\n                      <Route path=\"/auth/callback\" element={<AuthCallback />} />\n                      <Route path=\"/repository/:repoName\" element={\n                        <WsProvider>\n                          <RepositoryDetail />\n                        </WsProvider>\n                      }/>\n                      <Route path=\"/work-items/list\" element={<WorkItemsList />} />\n                      <Route path=\"/work-items/board\" element={<WorkItemsBoard />} />\n                      <Route path=\"/team/members\" element={<TeamMembers />} />\n                    </Routes>\n                  </ Suspense>\n                </Content>\n              </Layout>\n            </Layout>\n          </Router>\n        </UserProvider>\n      </QueryClientProvider>\n    </ConfigProvider>\n  );\n}\n\nexport default App; ","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals; ","import {\n    loadMicroApp,\n    prefetchApps,\n    start,\n    addGlobalUncaughtErrorHandler\n} from 'qiankun'\n\nexport const APP: any = {\n// 数据看板\n    DIFFVIEWER: {\n        name: 'diff-viewer', // 应用名称（即子应用package.json的name值）\n        entry: `http://localhost:3002/`, // 应用入口\n        activeRule: '/:appId/detail/:id/kanban', // 应用激活规则\n        container: '#subapp' // 应用挂载容器\n    },\n    // 雷电APM\n    // APM: {\n    //   name: 'apm',\n    //   entry: `//apm${environment}.bigda.com/`,\n    //   activeRule: '/:appId/detail/:id/apm',\n    //   container: '#subapp'\n    // }\n}\n\nconst handleError = (e: any) => {\n    console.log(e)\n}\n\n// 加载子应用\nconst loadSubApp = async (type: any, props: any) => {\n    await unmountSubApp();\n    (window as any).subApp = loadMicroApp(\n      {\n        ...APP[type],\n        props: {\n          baseInfo: APP[type],\n          ...props\n        }\n      }\n    )\n    addGlobalUncaughtErrorHandler(handleError)\n}\n\n// 预请求子应用\nexport const prefetchSubApp = () => {\n    start()\n    prefetchApps(Object.values(APP))\n}\n\n\nexport const unmountSubApp = async () => {\n    const subApp = (window as any).subApp\n    if (!subApp) {\n      return\n    }\n  \n    await subApp.loadPromise\n    await subApp.bootstrapPromise\n    await subApp.mountPromise\n    let status = subApp.getStatus()\n  \n    if (status === 'NOT_MOUNTED') {\n      return\n    } else {\n      await subApp.unmount()\n    }\n}\n\nexport default loadSubApp\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/reset.css';\nimport './index.css';\nimport { prefetchSubApp } from './qiankun';\nprefetchSubApp()\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\n\nroot.render(\n  <App />\n);\n\nreportWebVitals(console.log); ","import { User } from '../types/user';\nimport apiClient from './axios';\n\nexport const authService = {\n  login: () => {\n    const clientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n    const redirectUri = `${window.location.origin}/auth/callback`;\n    window.location.href = `https://github.com/login/oauth/authorize?client_id=${clientId}&redirect_uri=${redirectUri}&scope=repo,user`;\n  },\n\n  handleCallback: async (code: string) => {\n    const response = await apiClient.post('/auth/callback', { code });\n    const { access_token } = response.data;\n    localStorage.setItem('github_token', access_token);\n    return access_token;\n  },\n\n  getCurrentUser: async (): Promise<User> => {\n    const response = await apiClient.get('/auth/user');\n    return response.data;\n  },\n\n  logout: () => {\n    localStorage.removeItem('github_token');\n    window.location.href = '/';\n  }\n}; ","import axios, { AxiosError, InternalAxiosRequestConfig } from 'axios';\nimport { message } from 'antd';\n\n// 创建 axios 实例\nconst apiClient = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  timeout: 10000,\n});\n\n// 请求拦截器\napiClient.interceptors.request.use(\n  (config: InternalAxiosRequestConfig) => {\n    const token = localStorage.getItem('github_token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error: AxiosError) => {\n    return Promise.reject(error);\n  }\n);\n\n// 响应拦截器\napiClient.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error: AxiosError) => {\n    if (error.response) {\n      switch (error.response.status) {\n        case 401:\n          // 未授权，清除 token 并跳转到登录页\n        //   localStorage.removeItem('github_token');\n        //   window.location.href = '/';\n          message.error('登录已过期，请重新登录');\n          break;\n        case 403:\n          message.error('没有权限访问');\n          break;\n        case 404:\n          message.error('请求的资源不存在');\n          break;\n        case 500:\n          message.error('服务器错误');\n          break;\n        default:\n          message.error('未知错误');\n      }\n    } else if (error.request) {\n      message.error('网络错误，请检查网络连接');\n    } else {\n      message.error('请求配置错误');\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default apiClient; ","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n"],"names":["withNativeArrayBuffer","ArrayBuffer","toString","Object","prototype","withNativeBlob","Blob","call","withNativeFile","File","isBinary","obj","isView","buffer","hasBinary","toJSON","Array","isArray","i","l","length","arguments","key","hasOwnProperty","deconstructPacket","packet","buffers","packetData","data","pack","_deconstructPacket","attachments","placeholder","_placeholder","num","push","newData","Date","reconstructPacket","_reconstructPacket","Error","RESERVED_EVENTS","protocol","PacketType","Encoder","constructor","replacer","this","encode","type","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","id","str","JSON","stringify","deconstruction","unshift","isObject","value","Decoder","Emitter","reviver","super","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","emitReserved","base64","takeBinaryData","p","Number","charAt","undefined","start","buf","substring","next","c","payload","tryParse","substr","isPayloadValid","parse","e","CONNECT","DISCONNECT","CONNECT_ERROR","indexOf","destroy","finishedReconstruction","reconPack","binData","on","ev","fn","off","freeze","connect","connect_error","disconnect","disconnecting","newListener","removeListener","Socket","io","opts","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","assign","_autoConnect","open","disconnected","subEvents","subs","onopen","bind","onpacket","onerror","onclose","active","_readyState","send","_len","args","_key","emit","apply","_a","_b","_c","_len2","_key2","retries","fromQueue","volatile","_addToQueue","options","compress","ack","pop","_registerAckCallback","isTransportWritable","engine","transport","writable","isConnected","_hasPingExpired","notifyOutgoingListeners","_this","timeout","ackTimeout","timer","setTimeoutFn","splice","clearTimeoutFn","_len3","_key3","withError","emitWithAck","_len4","_key4","Promise","resolve","reject","arg1","arg2","_this2","tryCount","pending","err","shift","_len5","responseArgs","_key5","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","reason","description","_clearAcks","keys","forEach","some","String","sid","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listeners","slice","listener","self","sent","_len6","_key6","emitBuffered","subDestroy","close","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","Math","pow","rand","random","deviation","floor","reset","setMin","setMax","setJitter","Manager","uri","nsps","path","installTimerFunctions","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","skipReconnect","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","socket","openSubDestroy","onError","cleanup","errorSub","autoUnref","unref","onping","ondata","ondecoded","nextTick","_destroy","_close","encodedPackets","write","delay","onreconnect","attempt","cache","lookup","parsed","loc","location","host","test","port","href","url","source","sameNamespace","forceNew","multiplex","query","queryKey","WsContext","createContext","WsProvider","_ref","children","searchParams","useSearchParams","repoId","get","changeMsg","setChangeMsg","useState","deployMsg","setDeployMsg","useRef","useEffect","token","localStorage","getItem","current","process","REACT_APP_WS_URL","_socket$current","console","log","error","_jsx","Provider","useWebSocket","context","useContext","UserContext","UserProvider","user","setUser","loading","setLoading","setError","authService","getCurrentUser","then","catch","finally","login","logout","Header","Layout","Text","Typography","AppHeader","useUser","userMenu","icon","LogoutOutlined","label","onClick","_jsxs","style","background","padding","display","justifyContent","alignItems","className","strong","fontSize","Button","Dropdown","menu","items","placement","Space","cursor","Avatar","src","avatar_url","name","UserOutlined","Sider","Sidebar","navigate","useNavigate","useLocation","menuItems","FolderOutlined","ProjectOutlined","IssuesCloseOutlined","TeamOutlined","width","borderRight","Menu","mode","selectedKeys","pathname","defaultOpenKeys","height","Home","lazy","AuthCallback","RepositoryDetail","WorkItemsList","WorkItemsBoard","TeamMembers","Content","queryClient","QueryClient","ConfigProvider","theme","algorithm","defaultAlgorithm","colorPrimary","borderRadius","boxShadow","QueryClientProvider","client","Router","Suspense","Routes","Route","element","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","APP","DIFFVIEWER","entry","activeRule","container","prefetchApps","values","ReactDOM","document","getElementById","render","App","reportWebVitals","clientId","REACT_APP_GITHUB_CLIENT_ID","redirectUri","window","origin","handleCallback","async","response","apiClient","post","code","access_token","setItem","removeItem","axios","create","baseURL","REACT_APP_API_URL","interceptors","request","use","config","headers","Authorization","status","module","exports","selection","getSelection","rangeCount","activeElement","ranges","getRangeAt","tagName","toUpperCase","blur","removeAllRanges","range","addRange","focus","mixin","addEventListener","event","_callbacks","once","removeAllListeners","removeEventListener","cb","callbacks","len","hasListeners"],"sourceRoot":""}